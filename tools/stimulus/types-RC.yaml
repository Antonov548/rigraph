
GRAPH:
    CALL: '&%C%'
    CTYPE: igraph_t
    INCONV:
        IN: R_SEXP_to_igraph(%I%, &%C%);
        INOUT: |-
            R_SEXP_to_igraph_copy(%I%, &%C%);
            IGRAPH_FINALLY(igraph_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_to_SEXP(&%C%));
            igraph_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            IGRAPH_FINALLY(igraph_destroy, &%C%);
            PROTECT(%I%=R_igraph_to_SEXP(&%C%));
            igraph_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

GRAPH_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_igraph(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) { R_SEXP_to_igraph_copy(%I%, &%C%);
            IGRAPH_FINALLY(igraph_destroy, &%C%); }
        OUT: '%I%=R_GlobalEnv; /* hack to have a non-NULL value */'
    OUTCONV:
        INOUT: |-
            if (!isNull(%I%)) { PROTECT(%I%=R_igraph_to_SEXP(&%C%));
            igraph_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1); }
        OUT: |-
            IGRAPH_FINALLY(igraph_destroy, &%C%);
            PROTECT(%I%=R_igraph_to_SEXP(&%C%));
            igraph_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

INTEGER:
    CTYPE: igraph_integer_t
    CALL:
        IN: '%C%'
        OUT: '&%C%'
        INOUT: '&%C%'
    INCONV:
        IN: '%C%=INTEGER(%I%)[0];'
        INOUT: '%C%=INTEGER(%I%)[0];'
        OUT: '%C%=0;'
    OUTCONV:
        OUT: |-
            PROTECT(%I%=NEW_INTEGER(1));
            INTEGER(%I%)[0]=%C%;

INT:
    CTYPE: int
    INCONV:
        IN: '%C%=INTEGER(%I%)[0];'

REAL:
    CTYPE: igraph_real_t
    CALL:
        IN: '%C%'
        OUT: '&%C%'
        INOUT: '&%C%'
    INCONV:
        IN: '%C%=REAL(%I%)[0];'
        INOUT: '%C%=REAL(%I%)[0];'
    OUTCONV:
        OUT: |-
            PROTECT(%I%=NEW_NUMERIC(1));
            REAL(%I%)[0]=%C%;
        INOUT: |-
            PROTECT(%I%=NEW_NUMERIC(1));
            REAL(%I%)[0]=%C%;

BOOLEAN:
    CTYPE: igraph_bool_t
    CALL:
        IN: '%C%'
        OUT: '&%C%'
        INOUT: '&%C%'
    INCONV:
        IN: '%C%=LOGICAL(%I%)[0];'
        INOUT: '%C%=LOGICAL(%I%)[0];'
    OUTCONV:
        OUT: |-
            PROTECT(%I%=NEW_LOGICAL(1));
            LOGICAL(%I%)[0]=%C%;
        INOUT: |-
            PROTECT(%I%=NEW_LOGICAL(1));
            LOGICAL(%I%)[0]=%C%;

ERROR:
    CTYPE: int

CONNECTEDNESS:
    CTYPE: igraph_connectedness_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

NEIMODE:
    CTYPE: igraph_neimode_t
    INCONV:
        IN: '%C%=(igraph_neimode_t) REAL(%I%)[0];'

INOUTMODE:
    CTYPE: igraph_neimode_t
    INCONV:
        IN: '%C%=(igraph_neimode_t) REAL(%I%)[0];'

TODIRECTED:
    CTYPE: igraph_to_directed_t
    INCONV:
        IN: '%C%=(igraph_to_directed_t) REAL(%I%)[0];'

TOUNDIRECTED:
    CTYPE: igraph_to_undirected_t
    INCONV:
        IN: '%C%=(igraph_to_undirected_t) REAL(%I%)[0];'

BLISSSH:
    CTYPE: igraph_bliss_sh_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

ADD_WEIGHTS:
    CTYPE: igraph_add_weights_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

VECTOR:
    CALL: '&%C%'
    CTYPE: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_vector(%I%, &%C%);
        INOUT: |-
            if (0 != R_SEXP_to_vector_copy(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTORM1:
    CALL: '&%C%'
    CTYPE: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_vector(%I%, &%C%);
        INOUT: |-
            if (0 != R_SEXP_to_vector_copy(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_BOOL:
    CALL: '&%C%'
    CTYPE: igraph_vector_bool_t
    INCONV:
        IN: R_SEXP_to_vector_bool(%I%, &%C%);
        INOUT: |-
            if (0 != R_SEXP_to_vector_bool_copy(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_bool_destroy, &%C%);
        OUT: |-
            if (0 != igraph_vector_bool_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_bool_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_vector_bool_to_SEXP(&%C%));
            igraph_vector_bool_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_bool_to_SEXP(&%C%));
            igraph_vector_bool_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_LONG:
    CALL: '&%C%'
    CTYPE: igraph_vector_long_t
    INCONV:
        IN: R_SEXP_to_vector_long_copy(%I%, &%C%);
        OUT: |-
            if (0 != igraph_vector_long_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_long_destroy, &%C%);
    OUTCONV:
        IN: igraph_vector_long_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_long_to_SEXP(&%C%));
            igraph_vector_long_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_INT:
    CALL: '&%C%'
    CTYPE: igraph_vector_int_t
    INCONV:
        IN: R_SEXP_to_vector_int(%I%, &%C%);
        OUT: |-
            if (0 != igraph_vector_int_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_int_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vector_int_to_SEXP(&%C%));
            igraph_vector_int_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_LONG_M1:
    CALL: '&%C%'
    CTYPE: igraph_vector_long_t
    INCONV:
        IN: R_SEXP_to_vector_long_copy(%I%, &%C%);
        OUT: |-
            if (0 != igraph_vector_long_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_long_destroy, &%C%);
    OUTCONV:
        IN: igraph_vector_long_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_long_to_SEXPp1(&%C%));
            igraph_vector_long_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTORLIST:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        IN: R_igraph_SEXP_to_vectorlist(%I%, &%C%);
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_vectorlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vectorlist_to_SEXP(&%C%));
            R_igraph_vectorlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

MATRIXLIST:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        IN: R_igraph_SEXP_to_matrixlist(%I%, &%C%);

VERTEXSETLIST:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        IN: if (!isNull(%I%)) { R_igraph_SEXP_to_vectorlist(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_vectorlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vectorlist_to_SEXP_p1(&%C%));
            R_igraph_vectorlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXSETLIST_INT:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        IN: if (!isNull(%I%)) { R_igraph_SEXP_to_vectorlist_int(%I%, &%C%); }

EDGESETLIST:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_vectorlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vectorlist_to_SEXP_p1(&%C%));
            R_igraph_vectorlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXSETLIST_OR_0:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_vectorlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vectorlist_to_SEXP_p1(&%C%));
            R_igraph_vectorlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

EDGESETLIST_OR_0:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_vectorlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vectorlist_to_SEXP_p1(&%C%));
            R_igraph_vectorlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

ADJLIST:
    CALL: '&%C%'
    CTYPE: igraph_adjlist_t
    INCONV:
        IN: |-
            if (0 != R_SEXP_to_igraph_adjlist(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }

VECTOR_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) {
              if (0 != R_SEXP_to_vector_copy(%I%, &%C%)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            } else {
              if (0 != igraph_vector_init(&%C%, 0)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=NEW_NUMERIC(0);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTORM1_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) {
              if (0 != R_SEXP_to_vector_copy(%I%, &%C%)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            } else {
              if (0 != igraph_vector_init(&%C%, 0)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=NEW_NUMERIC(0);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

EDGEWEIGHTS:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXWEIGHTS:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

EDGECAPACITY:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_BOOL_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_bool_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_bool(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_bool_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_bool_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_bool_to_SEXP(&%C%));
            igraph_vector_bool_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VECTOR_LONG_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_long_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_long(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_vector_long_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_long_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_long_to_SEXP(&%C%));
            igraph_vector_long_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

MATRIX:
    CALL: '&%C%'
    CTYPE: igraph_matrix_t
    INCONV:
        IN: R_SEXP_to_matrix(%I%, &%C%);
        INOUT: |-
            if (0 != R_SEXP_to_igraph_matrix_copy(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_matrix_destroy, &%C%);
        OUT: |-
            if (0 != igraph_matrix_init(&%C%, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_matrix_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_matrix_to_SEXP(&%C%));
            igraph_matrix_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_matrix_to_SEXP(&%C%));
            igraph_matrix_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

MATRIX_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_matrix_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_matrix(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) {
              if (0 != R_SEXP_to_igraph_matrix_copy(%I%, &%C%)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            } else {
              if (0 != igraph_matrix_init(&%C%, 0, 0)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            }
            IGRAPH_FINALLY(igraph_matrix_destroy, &%C%);
            %I%=NEW_NUMERIC(0);
        OUT: |-
            if (0 != igraph_matrix_init(&%C%, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_matrix_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_0ormatrix_to_SEXP(&%C%));
            igraph_matrix_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_0ormatrix_to_SEXP(&%C%));
            igraph_matrix_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

ARRAY3:
    CALL: '&%C%'
    CTYPE: igraph_array3_t
    INCONV:
        IN: R_igraph_SEXP_to_array3(%I%, &%C%);
        OUT: |-
            if (0 != igraph_array3_init(&%C%, 0, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_array3_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_array3_to_SEXP(&%C%));
            igraph_array3_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

ARRAY3_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_array3_t
    INCONV:
        IN: if (!isNull(%I%)) { R_igraph_SEXP_to_array3(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_array3_init(&%C%, 0, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_array3_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orarray3_to_SEXP(&%C%));
            igraph_array3_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEX:
    CTYPE: igraph_integer_t
    INCONV:
        IN: '%C%=(igraph_integer_t) REAL(%I%)[0];'

VERTEXPTR:
    CALL:
        OUT: '&%C%'
    CTYPE: igraph_integer_t
    INCONV:
        OUT: '%C% = -1;'
    OUTCONV:
        OUT: |-
            PROTECT(%I% = NEW_INTEGER(1));
            INTEGER(%I%)[0] = %C% + 1;

VERTEXSET:
    CALL:
        IN: '%C%'
        OUT: '&%C%'
    CTYPE:
        IN: igraph_vs_t
        OUT: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_igraph_vs(%I%, &%C1%, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        IN: igraph_vs_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXSET_OR_0:
    CALL:
        IN: '%C%'
        OUT: '&%C%'
    CTYPE:
        IN: igraph_vs_t
        OUT: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_igraph_vs(%I%, &%C1%, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        IN: igraph_vs_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXSET_INT:
    CALL:
        IN: '%C%'
        OUT: '&%C%'
    CTYPE:
        IN: igraph_vs_t
        OUT: igraph_vector_int_t
    INCONV:
        IN: R_SEXP_to_igraph_vs(%I%, &%C1%, &%C%);
        OUT: |-
            if (0 != igraph_vector_int_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_int_destroy, &%C%);
    OUTCONV:
        IN: igraph_vs_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_int_to_SEXPp1(&%C%));
            igraph_vector_int_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

EDGESET:
    CALL:
        IN: '%C%'
        OUT: '&%C%'
    CTYPE:
        IN: igraph_es_t
        OUT: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_igraph_es(%I%, &%C1%, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        IN: igraph_es_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

EDGESET_OR_0:
    CALL:
        IN: '%C%'
        OUT: '&%C%'
    CTYPE:
        IN: igraph_es_t
        OUT: igraph_vector_t
    INCONV:
        IN: R_SEXP_to_igraph_es(%I%, &%C1%, &%C%);
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        IN: igraph_es_destroy(&%C%);
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXPp1(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

'NULL':
    CALL: '0'
    HEADER: {}

ARPACKOPT:
    CALL: '&%C%'
    CTYPE: igraph_arpack_options_t
    INCONV:
        INOUT: R_SEXP_to_igraph_arpack_options(%I%, &%C%);
    OUTCONV:
        INOUT: PROTECT(%I%=R_igraph_arpack_options_to_SEXP(&%C%));

DRL_OPTIONS:
    CALL: '&%C%'
    CTYPE: igraph_layout_drl_options_t
    INCONV:
        IN: R_SEXP_to_igraph_layout_drl_options(%I%, &%C%);

BLISSINFO:
    CALL: '&%C%'
    CTYPE: igraph_bliss_info_t
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_bliss_info_to_SEXP(&%C%));
            if (%C%.group_size) { free(%C%.group_size); }

STRVECTOR:
    CALL: '&%C%'
    CTYPE: igraph_strvector_t
    INCONV:
        IN: R_igraph_SEXP_to_strvector(%I%, &%C%);
        OUT: |-
            if (0 != igraph_strvector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_strvector_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_strvector_to_SEXP(&%C%));
            igraph_strvector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

BIPARTITE_TYPES:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_bool_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_bool(%I%, &%C%); }

BIPARTITE_TYPES_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_bool_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_bool(%I%, &%C%); }

VERTEX_COLOR:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_int_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_int(%I%, &%C%); }

EDGE_COLOR:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_int_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_int(%I%, &%C%); }

COMMCMP:
    CTYPE: igraph_community_comparison_t
    INCONV:
        IN: '%C%=(igraph_community_comparison_t) REAL(%I%)[0];'

SUBGRAPH_IMPL:
    CTYPE: igraph_subgraph_implementation_t
    INCONV:
        IN: '%C%=(igraph_subgraph_implementation_t) REAL(%I%)[0];'

VERTEX_ATTRIBUTE_COMBINATION:
    CALL: '&%C%'
    CTYPE: igraph_attribute_combination_t
    INCONV:
        IN: R_SEXP_to_attr_comb(%I%, &%C%);
    OUTCONV:
        IN: igraph_attribute_combination_destroy(&%C%);

EDGE_ATTRIBUTE_COMBINATION:
    CALL: '&%C%'
    CTYPE: igraph_attribute_combination_t
    INCONV:
        IN: R_SEXP_to_attr_comb(%I%, &%C%);
    OUTCONV:
        IN: igraph_attribute_combination_destroy(&%C%);

HRG:
    CALL: '&%C%'
    CTYPE: igraph_hrg_t
    INCONV:
        IN: R_SEXP_to_hrg(%I%, &%C%);
        INOUT: |-
            if (0 != R_SEXP_to_hrg_copy(%I%, &%C%)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_hrg_destroy, &%C%);
        OUT: |-
            if (0 != igraph_hrg_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_hrg_destroy, &%C%);
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_hrg_to_SEXP(&%C%));
            igraph_hrg_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_hrg_to_SEXP(&%C%));
            igraph_hrg_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

RECIP:
    CTYPE: igraph_reciprocity_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

SCGMAT:
    CTYPE: igraph_scg_matrix_t
    INCONV:
        IN: '%C%=(igraph_scg_matrix_t) REAL(%I%)[0];'

SCGALGO:
    CTYPE: igraph_scg_algorithm_t
    INCONV:
        IN: '%C%=(igraph_scg_algorithm_t) REAL(%I%)[0];'

SCGNORM:
    CTYPE: igraph_scg_norm_t
    INCONV:
        IN: '%C%=(igraph_scg_norm_t) REAL(%I%)[0];'

SCGDIR:
    CTYPE: igraph_integer_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

SPARSEMAT:
    CALL: '&%C%'
    CTYPE: igraph_sparsemat_t
    INCONV:
        IN: R_SEXP_to_sparsemat(%I%, &%C%);
        OUT: |-
            if (0 != igraph_sparsemat_init(&%C%, 0, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_sparsemat_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_sparsemat_to_SEXP(&%C%));
            igraph_sparsemat_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

SPARSEMATPTR:
    CALL: '&%C%'
    CTYPE: igraph_sparsemat_t
    INCONV:
        IN: R_SEXP_to_sparsemat(%I%, &%C%);
        OUT: /* Don't need to init. */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_sparsemat_to_SEXP(&%C%));
            igraph_sparsemat_destroy(&%C%);

SPARSEMAT_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_sparsemat_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_sparsemat(%I%, &%C%); }
        OUT: |-
            if (0 != igraph_sparsemat_init(&%C%, 0, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_sparsemat_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_0orsparsemat_to_SEXP(&%C%));
            igraph_sparsemat_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

CVECTOR:
    CALL: '&%C%'
    CTYPE: igraph_vector_complex_t
    INCONV:
        IN: R_SEXP_to_vector_complex(%I%, &%C%);
        OUT: |-
            if (0 != igraph_vector_complex_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_complex_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vector_complex_to_SEXP(&%C%));
            igraph_vector_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

CMATRIX:
    CALL: '&%C%'
    CTYPE: igraph_matrix_complex_t
    INCONV:
        IN: R_SEXP_to_matrix_complex(%I%, &%C%);
        OUT: |-
            if (0 != igraph_matrix_complex_init(&%C%, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_matrix_complex_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_matrix_complex_to_SEXP(&%C%));
            igraph_matrix_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

CVECTOR_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_vector_complex_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_vector_complex(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) {
              if (0 != R_SEXP_to_vector_complex_copy(%I%, &%C%)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            } else {
              if (0 != igraph_vector_complex_init(&%C%, 0)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            }
            IGRAPH_FINALLY(igraph_vector_complex_destroy, &%C%);
            %I%=NEW_NUMERIC(0);
        OUT: |-
            if (0 != igraph_vector_complex_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_complex_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_0orvector_complex_to_SEXP(&%C%));
            igraph_vector_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_0orvector_complex_to_SEXP(&%C%));
            igraph_vector_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

CMATRIX_OR_0:
    CALL: '(isNull(%I%) ? 0 : &%C%)'
    CTYPE: igraph_matrix_complex_t
    INCONV:
        IN: if (!isNull(%I%)) { R_SEXP_to_matrix_complex(%I%, &%C%); }
        INOUT: |-
            if (!isNull(%I%)) {
              if (0 != R_SEXP_to_matrix_complex_copy(%I%, &%C%)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            } else {
              if (0 != igraph_matrix_complex_init(&%C%, 0, 0)) {
                igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
              }
            }
            IGRAPH_FINALLY(igraph_matrix_complex_destroy, &%C%);
            %I%=NEW_NUMERIC(0);
        OUT: |-
            if (0 != igraph_matrix_complex_init(&%C%, 0, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_matrix_complex_destroy, &%C%);
            %I%=R_GlobalEnv; /* hack to have a non-NULL value */
    OUTCONV:
        INOUT: |-
            PROTECT(%I%=R_igraph_0ormatrix_complex_to_SEXP(&%C%));
            igraph_matrix_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);
        OUT: |-
            PROTECT(%I%=R_igraph_0ormatrix_complex_to_SEXP(&%C%));
            igraph_matrix_complex_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

VERTEXINDEX:
    CALL: '&%C%'
    CTYPE: igraph_vector_t
    INCONV:
        OUT: |-
            if (0 != igraph_vector_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(igraph_vector_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_vector_to_SEXP(&%C%));
            igraph_vector_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

PLFIT:
    CALL: '&%C%'
    CTYPE: igraph_plfit_result_t
    OUTCONV:
        OUT: PROTECT(%I%=R_igraph_plfit_result_to_SEXP(&%C%));

MAXFLOW_STATS:
    CALL: '&%C%'
    CTYPE: igraph_maxflow_stats_t
    HEADER: {}
    OUTCONV:
        OUT: PROTECT(%I%=R_igraph_maxflow_stats_to_SEXP(&%C%));

EIGENALGO:
    CTYPE: igraph_integer_t
    INCONV:
        IN: '%C%=REAL(%I%)[0];'

EIGENWHICH:
    CALL: '&%C%'
    CTYPE: igraph_eigen_which_t
    INCONV:
        IN: R_SEXP_to_igraph_eigen_which(%I%, &%C%);

EIGENWHICHPOS:
    CTYPE: igraph_eigen_which_position_t
    INCONV:
        IN: '%C%=INTEGER(%I%)[0];'

SIRLIST:
    CALL: '&%C%'
    CTYPE: igraph_vector_ptr_t
    INCONV:
        OUT: |-
            if (0 != igraph_vector_ptr_init(&%C%, 0)) {
              igraph_error("", __FILE__, __LINE__, IGRAPH_ENOMEM);
            }
            IGRAPH_FINALLY(R_igraph_sirlist_destroy, &%C%);
    OUTCONV:
        OUT: |-
            PROTECT(%I%=R_igraph_sirlist_to_SEXP(&%C%));
            R_igraph_sirlist_destroy(&%C%);
            IGRAPH_FINALLY_CLEAN(1);

PAGERANKALGO:
    CTYPE: igraph_pagerank_algo_t
    INCONV:
        IN: '%C%=(igraph_pagerank_algo_t) INTEGER(%I%)[0];'

PAGERANKOPT:
    CTYPE: |-
      igraph_arpack_options_t %C%1;
      void*
    INCONV:
        INOUT: |-
          if (%C1% == IGRAPH_PAGERANK_ALGO_ARPACK) {
            R_SEXP_to_igraph_arpack_options(%I%, &%C%1);
            %C% = &%C%1;
          } else {
            %C% = 0;
          }
    OUTCONV:
        INOUT: |-
          if (%C1% == IGRAPH_PAGERANK_ALGO_ARPACK) {
            PROTECT(%I% = R_igraph_arpack_options_to_SEXP(&%C%1));
          } else {
            PROTECT(%I%);
          }

DEPRECATED:
    CALL: {}
    HEADER: {}

LSETYPE:
    CTYPE: igraph_laplacian_spectral_embedding_type_t
    INCONV:
        IN: '%C%=(igraph_laplacian_spectral_embedding_type_t) INTEGER(%I%)[0];'

RWSTUCK:
    CTYPE: igraph_random_walk_stuck_t
    INCONV:
        IN: '%C%=(igraph_random_walk_stuck_t) INTEGER(%I%)[0];'

EDGE_TYPE_SW:
    CTYPE: igraph_edge_type_sw_t
    INCONV:
        IN: '%C%=(igraph_edge_type_sw_t) INTEGER(%I%)[0];'

